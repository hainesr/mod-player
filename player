#!/usr/bin/env ruby
# frozen_string_literal: true

# Copyright (c) 2018 Robert Haines.
#
# Licensed under the BSD License. See LICENCE for details.

lib = File.expand_path('lib', __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'rubygems'
require 'bundler/setup'
require 'ffi/openmpt'

require 'mod_player/audio/portaudio'
require 'mod_player/ui'

saved_err = STDERR.dup
STDERR.reopen(File.new('/dev/null', 'w'))

file = ARGV[0].chomp
mod = ::FFI::OpenMPT::Module.new(file)

audio = ModPlayer::PortAudio.new
audio.start

ui = ModPlayer::UI.new(mod, file)
ui.open
ui.draw

buffer_max_frames = audio.write_available * 2
buffer = ::FFI::MemoryPointer.new(:float, buffer_max_frames * audio.channels)

at_exit do
  STDERR.reopen(saved_err)
  buffer.free
  audio.stop
  ui.close
  mod.close

  puts 'Module end...'
end

loop do
  can_write = audio.write_available

  next unless can_write.positive?

  has_read = mod.read_interleaved_float_stereo(can_write, buffer)

  break unless has_read.positive?

  audio.write(buffer, has_read)
  ui.listen
end
